// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  fullName     String?
  avatar       String?
  role         Role      @default(EMPLOYEE)
  tasks        Task[]    @relation("UserTasks") // Tasks assigned to this user
  createdTasks Task[]    @relation("ManagerTasks") // Tasks created by this user if Manager
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  otp          String?
  otpExpiry    DateTime?
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

model Task {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  status      TaskStatus @default(PENDING)
  creatorId   Int // Manager who created the task
  creator     User       @relation("ManagerTasks", fields: [creatorId], references: [id], onDelete: Cascade)
  assigneeId  Int? // Employee to whom the task is assigned
  assignee    User?      @relation("UserTasks", fields: [assigneeId], references: [id], onDelete: SetNull)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}
